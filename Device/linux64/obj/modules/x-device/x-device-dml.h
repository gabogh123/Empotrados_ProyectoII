/* Generated by dmlc, do not edit! */

#ifndef X_DEVICE_DML_H
#define X_DEVICE_DML_H

#define DML_PREFIX(x) x_device_##x

#define DMLDIR_IO_MEMORY_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/io-memory.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/io-memory.dml"

#include <simics/devs/io-memory.h>
#line 13 "x-device-dml.h"
#undef DMLDIR_IO_MEMORY_H

#define DMLDIR_INSTRUMENTATION_PROVIDER_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/instrumentation-provider.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/instrumentation-provider.dml"

#include <simics/model-iface/instrumentation-provider.h>
#line 20 "x-device-dml.h"
#undef DMLDIR_INSTRUMENTATION_PROVIDER_H

#define DMLDIR_BANK_INSTRUMENTATION_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/bank-instrumentation.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/bank-instrumentation.dml"

#include <simics/model-iface/bank-instrumentation.h>
#line 27 "x-device-dml.h"
#undef DMLDIR_BANK_INSTRUMENTATION_H

#define DMLDIR_INT_REGISTER_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/int-register.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/int-register.dml"

#include <simics/model-iface/int-register.h>
#line 34 "x-device-dml.h"
#undef DMLDIR_INT_REGISTER_H

#define DMLDIR_REGISTER_VIEW_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/register-view.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/register-view.dml"

#include <simics/model-iface/register-view.h>
#line 41 "x-device-dml.h"
#undef DMLDIR_REGISTER_VIEW_H

#define DMLDIR_REGISTER_VIEW_READ_ONLY_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/register-view-read-only.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/register-view-read-only.dml"

#include <simics/model-iface/register-view-read-only.h>
#line 48 "x-device-dml.h"
#undef DMLDIR_REGISTER_VIEW_READ_ONLY_H

#define DMLDIR_HASHTAB_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/hashtab.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/hashtab.dml"

#include <simics/util/hashtab.h>
#line 55 "x-device-dml.h"
#undef DMLDIR_HASHTAB_H

#define DMLDIR_BITCOUNT_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/bitcount.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/bitcount.dml"

#include <simics/util/bitcount.h>
#line 62 "x-device-dml.h"
#undef DMLDIR_BITCOUNT_H

#define DMLDIR_PYTHON_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/simulator/python.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/simulator/python.dml"

#include <simics/simulator/python.h>
#line 69 "x-device-dml.h"
#undef DMLDIR_PYTHON_H

#define DMLDIR_SIM_GET_CLASS_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/simulator/sim-get-class.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/simulator/sim-get-class.dml"

#include <simics/simulator/sim-get-class.h>
#line 76 "x-device-dml.h"
#undef DMLDIR_SIM_GET_CLASS_H

#define DMLDIR_DML_BUILTINS_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/1.4/dml-builtins.h"
#line 12 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/1.4/dml-builtins.dml"

    #include <simics/dmllib.h>
#line 83 "x-device-dml.h"
#undef DMLDIR_DML_BUILTINS_H

#define DMLDIR_BUILD_ID_6_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/build-id-6.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/build-id-6.dml"

#include <simics/build-id-6.h>
#line 90 "x-device-dml.h"
#undef DMLDIR_BUILD_ID_6_H

#define DMLDIR_BUILD_ID_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/build-id.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/build-id.dml"

#include <simics/build-id.h>
#line 97 "x-device-dml.h"
#undef DMLDIR_BUILD_ID_H

#define DMLDIR_DBUFFER_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/dbuffer.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/dbuffer.dml"

#include <simics/util/dbuffer.h>
#line 104 "x-device-dml.h"
#undef DMLDIR_DBUFFER_H

#define DMLDIR_SWABBER_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/swabber.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/swabber.dml"

#include <simics/util/swabber.h>
#line 111 "x-device-dml.h"
#undef DMLDIR_SWABBER_H

#define DMLDIR_FRAGS_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/frags.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/frags.dml"

#include <simics/util/frags.h>
#line 118 "x-device-dml.h"
#undef DMLDIR_FRAGS_H

#define DMLDIR_CALLBACKS_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/callbacks.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/callbacks.dml"

#include <simics/base/callbacks.h>
#line 125 "x-device-dml.h"
#undef DMLDIR_CALLBACKS_H

#define DMLDIR_ARITH_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/arith.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/arith.dml"

#include <simics/util/arith.h>
#line 132 "x-device-dml.h"
#undef DMLDIR_ARITH_H

#define DMLDIR_INT128_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/int128.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/int128.dml"

#include <simics/util/int128.h>
#line 139 "x-device-dml.h"
#undef DMLDIR_INT128_H

#define DMLDIR_DURATION_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/duration.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/duration.dml"

#include <simics/base/duration.h>
#line 146 "x-device-dml.h"
#undef DMLDIR_DURATION_H

#define DMLDIR_BIGTIME_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/bigtime.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/bigtime.dml"

#include <simics/base/bigtime.h>
#line 153 "x-device-dml.h"
#undef DMLDIR_BIGTIME_H

#define DMLDIR_LOCAL_TIME_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/local-time.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/local-time.dml"

#include <simics/base/local-time.h>
#line 160 "x-device-dml.h"
#undef DMLDIR_LOCAL_TIME_H

#define DMLDIR_CYCLE_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/cycle.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/cycle.dml"

#include <simics/model-iface/cycle.h>
#line 167 "x-device-dml.h"
#undef DMLDIR_CYCLE_H

#define DMLDIR_CLOCK_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/clock.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/clock.dml"

#include <simics/base/clock.h>
#line 174 "x-device-dml.h"
#undef DMLDIR_CLOCK_H

#define DMLDIR_LOG_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/log.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/log.dml"

#include <simics/base/log.h>
#line 181 "x-device-dml.h"
#undef DMLDIR_LOG_H

#define DMLDIR_CONFIGURATION_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/configuration.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/configuration.dml"

#include <simics/base/configuration.h>
#line 188 "x-device-dml.h"
#undef DMLDIR_CONFIGURATION_H

#define DMLDIR_EVENT_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/event.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/event.dml"

#include <simics/base/event.h>
#line 195 "x-device-dml.h"
#undef DMLDIR_EVENT_H

#define DMLDIR_GLOBAL_NOTIFIER_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/global-notifier.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/global-notifier.dml"

#include <simics/base/global-notifier.h>
#line 202 "x-device-dml.h"
#undef DMLDIR_GLOBAL_NOTIFIER_H

#define DMLDIR_HAP_PRODUCER_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/hap-producer.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/hap-producer.dml"

#include <simics/base/hap-producer.h>
#line 209 "x-device-dml.h"
#undef DMLDIR_HAP_PRODUCER_H

#define DMLDIR_NOTIFIER_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/notifier.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/notifier.dml"

#include <simics/base/notifier.h>
#line 216 "x-device-dml.h"
#undef DMLDIR_NOTIFIER_H

#define DMLDIR_OBJECT_LOCKS_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/object-locks.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/object-locks.dml"

#include <simics/base/object-locks.h>
#line 223 "x-device-dml.h"
#undef DMLDIR_OBJECT_LOCKS_H

#define DMLDIR_SIM_EXCEPTION_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/sim-exception.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/sim-exception.dml"

#include <simics/base/sim-exception.h>
#line 230 "x-device-dml.h"
#undef DMLDIR_SIM_EXCEPTION_H

#define DMLDIR_4_8_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/obsolete/4_8.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/obsolete/4_8.dml"

#include <simics/obsolete/4_8.h>
#line 237 "x-device-dml.h"
#undef DMLDIR_4_8_H

#define DMLDIR_EMBED_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/simulator/embed.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/simulator/embed.dml"

#include <simics/simulator/embed.h>
#line 244 "x-device-dml.h"
#undef DMLDIR_EMBED_H

#define DMLDIR_5_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/obsolete/5.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/obsolete/5.dml"

#include <simics/obsolete/5.h>
#line 251 "x-device-dml.h"
#undef DMLDIR_5_H

#define DMLDIR_DEVICE_API_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/device-api.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/device-api.dml"

#include <simics/device-api.h>
#line 258 "x-device-dml.h"
#undef DMLDIR_DEVICE_API_H

#define DMLDIR_SIGNAL_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/signal.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/signal.dml"

#include <simics/devs/signal.h>
#line 265 "x-device-dml.h"
#undef DMLDIR_SIGNAL_H

#define DMLDIR_RAM_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/ram.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/ram.dml"

#include <simics/devs/ram.h>
#line 272 "x-device-dml.h"
#undef DMLDIR_RAM_H

#define DMLDIR_SOBJECT_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/sobject.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/sobject.dml"

#include <simics/base/sobject.h>
#line 279 "x-device-dml.h"
#undef DMLDIR_SOBJECT_H

#define DMLDIR_VECT_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/vect.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/vect.dml"

#include <simics/util/vect.h>
#line 286 "x-device-dml.h"
#undef DMLDIR_VECT_H

#define DMLDIR_CONF_OBJECT_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/conf-object.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/conf-object.dml"

#include <simics/base/conf-object.h>
#line 293 "x-device-dml.h"
#undef DMLDIR_CONF_OBJECT_H

#define DMLDIR_TIME_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/time.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/time.dml"

#include <simics/base/time.h>
#line 300 "x-device-dml.h"
#undef DMLDIR_TIME_H

#define DMLDIR_MEMORY_SPACE_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/memory-space.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/memory-space.dml"

#include <simics/devs/memory-space.h>
#line 307 "x-device-dml.h"
#undef DMLDIR_MEMORY_SPACE_H

#define DMLDIR_CBDATA_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/cbdata.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/cbdata.dml"

#include <simics/base/cbdata.h>
#line 314 "x-device-dml.h"
#undef DMLDIR_CBDATA_H

#define DMLDIR_TRANSLATOR_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/translator.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/devs/translator.dml"

#include <simics/devs/translator.h>
#line 321 "x-device-dml.h"
#undef DMLDIR_TRANSLATOR_H

#define DMLDIR_BREAKPOINTS_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/breakpoints.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/breakpoints.dml"

#include <simics/base/breakpoints.h>
#line 328 "x-device-dml.h"
#undef DMLDIR_BREAKPOINTS_H

#define DMLDIR_TYPES_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/processor/types.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/processor/types.dml"

#include <simics/processor/types.h>
#line 335 "x-device-dml.h"
#undef DMLDIR_TYPES_H

#define DMLDIR_DIRECT_MEMORY_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/direct-memory.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/direct-memory.dml"

#include <simics/base/direct-memory.h>
#line 342 "x-device-dml.h"
#undef DMLDIR_DIRECT_MEMORY_H

#define DMLDIR_MAP_TARGET_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/map-target.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/map-target.dml"

#include <simics/base/map-target.h>
#line 349 "x-device-dml.h"
#undef DMLDIR_MAP_TARGET_H

#define DMLDIR_VERSION_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/version.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/version.dml"

#include <simics/base/version.h>
#line 356 "x-device-dml.h"
#undef DMLDIR_VERSION_H

#define DMLDIR_STRBUF_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/strbuf.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/strbuf.dml"

#include <simics/util/strbuf.h>
#line 363 "x-device-dml.h"
#undef DMLDIR_STRBUF_H

#define DMLDIR_HELP_MACROS_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/help-macros.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/help-macros.dml"

#include <simics/util/help-macros.h>
#line 370 "x-device-dml.h"
#undef DMLDIR_HELP_MACROS_H

#define DMLDIR_ALLOC_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/alloc.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/util/alloc.dml"

#include <simics/util/alloc.h>
#line 377 "x-device-dml.h"
#undef DMLDIR_ALLOC_H

#define DMLDIR_ATTR_VALUE_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/attr-value.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/attr-value.dml"

#include <simics/base/attr-value.h>
#line 384 "x-device-dml.h"
#undef DMLDIR_ATTR_VALUE_H

#define DMLDIR_MODULE_HOST_CONFIG_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/module-host-config.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/module-host-config.dml"

#include <simics/module-host-config.h>
#line 391 "x-device-dml.h"
#undef DMLDIR_MODULE_HOST_CONFIG_H

#define DMLDIR_HOST_INFO_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/host-info.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/host-info.dml"

#include <simics/host-info.h>
#line 398 "x-device-dml.h"
#undef DMLDIR_HOST_INFO_H

#define DMLDIR_BASE_TYPES_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base-types.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base-types.dml"

#include <simics/base-types.h>
#line 405 "x-device-dml.h"
#undef DMLDIR_BASE_TYPES_H

#define DMLDIR_TYPES_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/types.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/types.dml"

#include <simics/base/types.h>
#line 412 "x-device-dml.h"
#undef DMLDIR_TYPES_H

#define DMLDIR_MEMORY_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/memory.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/memory.dml"

#include <simics/base/memory.h>
#line 419 "x-device-dml.h"
#undef DMLDIR_MEMORY_H

#define DMLDIR_MEMORY_TRANSACTION_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/memory-transaction.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/memory-transaction.dml"

#include <simics/base/memory-transaction.h>
#line 426 "x-device-dml.h"
#undef DMLDIR_MEMORY_TRANSACTION_H

#define DMLDIR_TRANSACTION_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/transaction.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/base/transaction.dml"

#include <simics/base/transaction.h>
#line 433 "x-device-dml.h"
#undef DMLDIR_TRANSACTION_H

#define DMLDIR_PYWRAP_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/pywrap.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/pywrap.dml"

#include <simics/pywrap.h>
#line 440 "x-device-dml.h"
#undef DMLDIR_PYWRAP_H

#define DMLDIR_TRANSACTION_H "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/transaction.h"
#line 16 "/home/gabriel/Documents/Simics/simics-6.0.185/linux64/bin/dml/api/6/1.4/simics/model-iface/transaction.dml"

#include <simics/model-iface/transaction.h>
#line 447 "x-device-dml.h"
#undef DMLDIR_TRANSACTION_H


#include <simics/util/help-macros.h>
#include <stdint.h>
#include "x-device-dml-struct.h"

typedef _traitref_t name;
typedef _traitref_t _qname;
typedef _traitref_t desc;
typedef _traitref_t documentation;
typedef _traitref_t limitations;
typedef _traitref_t object;
typedef _traitref_t implement;
typedef _traitref_t bank_transaction;
typedef _traitref_t bank_io_memory;
typedef _traitref_t shown_desc;
typedef _traitref_t bank;
typedef _traitref_t _conf_attribute;
typedef _traitref_t get_val;
typedef _traitref_t _get;
typedef _traitref_t get;
typedef _traitref_t set_val;
typedef _traitref_t _set;
typedef _traitref_t set;
typedef _traitref_t _bitsize;
typedef _traitref_t read_register;
typedef _traitref_t write_register;
typedef _traitref_t init;
typedef _traitref_t init_val;
typedef _traitref_t _register;
typedef _traitref_t _connect;
typedef _traitref_t _interface;
typedef _traitref_t write_field;
typedef _traitref_t _reg_or_field;
typedef _traitref_t read_only;
typedef _traitref_t post_init;
typedef _traitref_t device;
typedef _traitref_t _lsb;
typedef _traitref_t _set_field;
typedef _traitref_t field;
typedef _traitref_t _get_field;
typedef _traitref_t _write_field;
typedef _traitref_t read_field;
typedef _traitref_t _read_field;
typedef _traitref_t _reg_write_as_field;
typedef _traitref_t _reg_read_as_field;
typedef _traitref_t power_on_reset;
typedef _traitref_t _init_val_power_on_reset;
typedef _traitref_t port;
typedef _traitref_t poreset;
typedef _traitref_t _hard_reset;
typedef _traitref_t _init_val_hard_reset;
typedef _traitref_t hreset;
typedef _traitref_t _soft_reset;
typedef _traitref_t _init_val_soft_reset;
typedef _traitref_t sreset;
typedef _traitref_t soft_reset_val;
typedef _traitref_t ignore_write;
typedef _traitref_t read_zero;
typedef _traitref_t write_only;
typedef _traitref_t _simple_write;
typedef _traitref_t write_1_clears;
typedef _traitref_t clear_on_read;
typedef _traitref_t write_1_only;
typedef _traitref_t write_0_only;
typedef _traitref_t read_constant;
typedef _traitref_t no_reset;
typedef _traitref_t constant;
typedef _traitref_t silent_constant;
typedef _traitref_t zeros;
typedef _traitref_t ones;
typedef _traitref_t ignore;
typedef _traitref_t reserved;
typedef _traitref_t _log_unimpl_read;
typedef _traitref_t _log_unimpl_write;
typedef _traitref_t unimpl;
typedef _traitref_t read_unimpl;
typedef _traitref_t write_unimpl;
typedef _traitref_t silent_unimpl;
typedef _traitref_t undocumented;
typedef _traitref_t unmapped;
typedef _traitref_t sticky;
typedef _traitref_t design_limitation;
typedef _traitref_t function_mapped_bank;
typedef _traitref_t function_io_memory;
typedef _traitref_t miss_pattern_bank;
typedef _traitref_t bank_obj;
typedef _traitref_t map_target;
typedef _traitref_t signal_port;
typedef _traitref_t signal_connect;
typedef _traitref_t group;
typedef _traitref_t attribute;
typedef _traitref_t bool_attr;
typedef _traitref_t uint64_attr;
typedef _traitref_t int64_attr;
typedef _traitref_t double_attr;
typedef _traitref_t pseudo_attr;
typedef _traitref_t read_only_attr;
typedef _traitref_t write_only_attr;
typedef _traitref_t init_as_subobj;
typedef _traitref_t subdevice;
typedef _traitref_t __read;
typedef _traitref_t __write;
typedef _traitref_t event;
typedef _traitref_t _event;
typedef _traitref_t _time_event;
typedef _traitref_t _cycle_event;
typedef _traitref_t _simple_event;
typedef _traitref_t simple_time_event;
typedef _traitref_t simple_cycle_event;
typedef _traitref_t _custom_event;
typedef _traitref_t custom_time_event;
typedef _traitref_t custom_cycle_event;
typedef _traitref_t _uint64_event;
typedef _traitref_t uint64_time_event;
typedef _traitref_t uint64_cycle_event;


struct _name {
    char const **name;
};
struct __qname {
};
struct _desc {
};
struct _documentation {
};
struct _limitations {
};
struct _object {
    struct __qname _qname;
    struct _desc desc;
    struct _documentation documentation;
    struct _limitations limitations;
    struct _name name;
};
struct _implement {
    struct _object object;
};
struct _bank_transaction {
    struct _implement implement;
};
struct _bank_io_memory {
    struct _implement implement;
};
struct _shown_desc {
    struct _desc desc;
    char const **shown_desc;
};
struct _memo_bank___reginfo_table {
    _register const *p__out0;
    uint64 p__out1;
    int8 ran;
};
struct _memo_bank___sorted_regs {
    _register const *p__out0;
    int p__out1;
    int8 ran;
};
struct _bank {
    struct _object object;
    struct _shown_desc shown_desc;
    bool *partial;
    bool *overlapping;
    bool *_le_byte_order;
    _each_in_param_t _each_register;
    bool *be_bitorder;
    bool *use_io_memory;
    uint32 _before_read_callbacks;
    uint32 _after_read_callbacks;
    uint32 _before_write_callbacks;
    uint32 _after_write_callbacks;
    uint32 _connections;
    uint32 _cached_bank_obj;
    bool (*_get_register)(x_device_t *arg0, bank arg1, uint32 arg2, _register *arg3);
    bool (*unmapped_read)(x_device_t *arg0, bank arg1, uint64 arg2, uint64 arg3, void  *arg4, uint64 *arg5);
    bool (*unmapped_write)(x_device_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 arg4, void  *arg5);
    bool (*read)(x_device_t *arg0, bank arg1, uint64 arg2, uint64 arg3, void  *arg4, uint64 *arg5);
    bool (*unmapped_get)(x_device_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 *arg4);
    bool (*get)(x_device_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 *arg4);
    bool (*write)(x_device_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 arg4, void  *arg5);
    void  (*set)(x_device_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 arg4);
    bool (*io_memory_access)(x_device_t *arg0, bank arg1, generic_transaction_t *arg2, uint64 arg3, void  *arg4);
    exception_type_t (*transaction_access)(x_device_t *arg0, bank arg1, transaction_t *arg2, uint64 arg3, void  *arg4);
    struct _memo_bank___reginfo_table *_memo_outs__reginfo_table;
    struct _memo_bank___sorted_regs *_memo_outs__sorted_regs;
};
struct __conf_attribute {
    struct _object object;
    bool *readable;
    bool *writable;
    char const **_attr_type;
    char const **_attr_name;
    conf_class_t ***_parent_obj_class;
    _dml_attr_parent_obj_proxy_info_t *_parent_obj_proxy_info;
    uint32 *_object_relative_dims;
    bool *_attr_allow_cutoff;
    char const **_documentation;
    attr_attr_t *_flags;
    bool *_should_be_registered;
    set_error_t (*set_attribute)(x_device_t *arg0, _conf_attribute arg1, attr_value_t arg2);
    attr_value_t (*get_attribute)(x_device_t *arg0, _conf_attribute arg1);
};
struct _get_val {
    uint64 (*get_val)(x_device_t *arg0, get_val arg1);
    uint64 (*_default_get)(x_device_t *arg0, get_val arg1);
};
struct __get {
    struct _get_val get_val;
    uint64 (*get)(x_device_t *arg0, _get arg1);
};
struct _get {
    struct __get _get;
};
struct _set_val {
    void  (*set_val)(x_device_t *arg0, set_val arg1, uint64 arg2);
    void  (*_default_set)(x_device_t *arg0, set_val arg1, uint64 arg2);
};
struct __set {
    struct _set_val set_val;
    void  (*set)(x_device_t *arg0, _set arg1, uint64 arg2);
};
struct _set {
    struct __set _set;
};
struct __bitsize {
    uint8 *bitsize;
};
struct _read_register {
    uint64 (*read_register)(x_device_t *arg0, read_register arg1, uint64 arg2, void  *arg3);
};
struct _write_register {
    void  (*write_register)(x_device_t *arg0, write_register arg1, uint64 arg2, uint64 arg3, void  *arg4);
};
struct _init {
    _each_in_param_t _each_init;
    void  (*init)(x_device_t *arg0, init arg1);
};
struct _init_val {
    struct _init init;
    uint64 *init_val;
    void  (*_default_init)(x_device_t *arg0, init_val arg1);
};
struct __register {
    struct __bitsize _bitsize;
    struct __conf_attribute _conf_attribute;
    struct _get get;
    struct _init_val init_val;
    struct _read_register read_register;
    struct _set set;
    struct _shown_desc shown_desc;
    struct _write_register write_register;
    _each_in_param_t fields;
    _each_in_param_t _get_fields;
    _each_in_param_t _set_fields;
    _each_in_param_t _read_fields;
    _each_in_param_t _write_fields;
    uint64 *offset;
    bool *_le_byte_order;
    bool *_is_read_only;
    bool *mapped;
    uint32 val;
    uint64 (*read_unmapped_bits)(x_device_t *arg0, _register arg1, uint64 arg2, void  *arg3);
    void  (*write_unmapped_bits)(x_device_t *arg0, _register arg1, uint64 arg2, uint64 arg3, void  *arg4);
};
struct __connect {
    struct __conf_attribute _conf_attribute;
    _each_in_param_t _each_interface;
    uint32 obj;
    uint32 port;
    bool (*validate)(x_device_t *arg0, _connect arg1, conf_object_t *arg2);
    void  (*set)(x_device_t *arg0, _connect arg1, conf_object_t *arg2);
};
struct __interface {
    struct _object object;
    bool *_required;
    uint32 val;
};
struct _write_field {
    void  (*write_field)(x_device_t *arg0, write_field arg1, uint64 arg2, uint64 arg3, void  *arg4);
};
struct __reg_or_field {
    bool *is_register;
};
struct _read_only {
    struct __qname _qname;
    struct __reg_or_field _reg_or_field;
    struct _get_val get_val;
    struct _write_field write_field;
};
struct _post_init {
    _each_in_param_t _each_post_init;
    void  (*post_init)(x_device_t *arg0, post_init arg1);
};
struct _device {
    struct _init init;
    struct _object object;
    struct _post_init post_init;
};
struct __lsb {
    uint8 *lsb;
};
struct __set_field {
    struct __bitsize _bitsize;
    struct __lsb _lsb;
    struct _set set;
};
struct _field {
    struct __bitsize _bitsize;
    struct __get _get;
    struct __lsb _lsb;
    struct __set _set;
    struct _init_val init_val;
    struct _object object;
    struct _shown_desc shown_desc;
    _register *reg;
};
struct __get_field {
    struct __bitsize _bitsize;
    struct __lsb _lsb;
    struct _get get;
};
struct __write_field {
    struct __bitsize _bitsize;
    struct __lsb _lsb;
    struct _write_field write_field;
};
struct _read_field {
    uint64 (*read_field)(x_device_t *arg0, read_field arg1, uint64 arg2, void  *arg3);
};
struct __read_field {
    struct __bitsize _bitsize;
    struct __lsb _lsb;
    struct _read_field read_field;
};
struct __reg_write_as_field {
    struct __register _register;
    struct _write_field write_field;
};
struct __reg_read_as_field {
    struct _read_field read_field;
    struct __register _register;
};
struct _power_on_reset {
    _each_in_param_t _each_power_on_reset;
    void  (*power_on_reset)(x_device_t *arg0, power_on_reset arg1);
    void  (*_default_power_on_reset)(x_device_t *arg0, power_on_reset arg1);
};
struct __init_val_power_on_reset {
    struct _init_val init_val;
    struct _power_on_reset power_on_reset;
};
struct _port {
    struct _object object;
    uint32 _cached_port_obj;
};
struct _poreset {
    struct _power_on_reset power_on_reset;
};
struct __hard_reset {
    _each_in_param_t _each_hard_reset;
    void  (*hard_reset)(x_device_t *arg0, _hard_reset arg1);
    void  (*_default_hard_reset)(x_device_t *arg0, _hard_reset arg1);
};
struct __init_val_hard_reset {
    struct __hard_reset _hard_reset;
    struct _init_val init_val;
};
struct _hreset {
    struct __hard_reset _hard_reset;
};
struct __soft_reset {
    _each_in_param_t _each_soft_reset;
    void  (*soft_reset)(x_device_t *arg0, _soft_reset arg1);
    void  (*_default_soft_reset)(x_device_t *arg0, _soft_reset arg1);
};
struct __init_val_soft_reset {
    struct _init_val init_val;
    struct __soft_reset _soft_reset;
};
struct _sreset {
    struct __soft_reset _soft_reset;
};
struct _soft_reset_val {
    struct _set_val set_val;
    struct __soft_reset _soft_reset;
    uint64 *soft_reset_val;
};
struct _ignore_write {
    struct _write_field write_field;
};
struct _read_zero {
    struct _read_field read_field;
};
struct _write_only {
    struct __qname _qname;
    struct _read_field read_field;
};
struct __simple_write {
    struct _get_val get_val;
    struct _set_val set_val;
};
struct _write_1_clears {
    struct __simple_write _simple_write;
    struct _write_field write_field;
};
struct _clear_on_read {
    struct _get_val get_val;
    struct _read_field read_field;
    struct _set_val set_val;
};
struct _write_1_only {
    struct __simple_write _simple_write;
    struct _write_field write_field;
};
struct _write_0_only {
    struct __simple_write _simple_write;
    struct _write_field write_field;
};
struct _read_constant {
    struct _read_field read_field;
    uint64 *read_val;
};
struct _no_reset {
    struct __hard_reset _hard_reset;
    struct _power_on_reset power_on_reset;
    struct __soft_reset _soft_reset;
};
struct _constant {
    struct __qname _qname;
    struct __reg_or_field _reg_or_field;
    struct _get_val get_val;
    struct _no_reset no_reset;
    struct _write_field write_field;
};
struct _silent_constant {
    struct _ignore_write ignore_write;
    struct _no_reset no_reset;
};
struct _zeros {
    struct _constant constant;
    struct _init_val init_val;
};
struct _ones {
    struct _constant constant;
    struct _init_val init_val;
};
struct _ignore {
    struct _ignore_write ignore_write;
    struct _no_reset no_reset;
};
struct _reserved {
    struct __qname _qname;
    struct __reg_or_field _reg_or_field;
    struct __simple_write _simple_write;
    struct _write_field write_field;
    uint32 _has_logged;
};
struct __log_unimpl_read {
    struct __qname _qname;
    struct __reg_or_field _reg_or_field;
    struct _get_val get_val;
    struct _read_field read_field;
};
struct __log_unimpl_write {
    struct __qname _qname;
    struct __reg_or_field _reg_or_field;
    struct __simple_write _simple_write;
    struct _write_field write_field;
};
struct _unimpl {
    struct __log_unimpl_read _log_unimpl_read;
    struct __log_unimpl_write _log_unimpl_write;
    struct _limitations limitations;
};
struct _read_unimpl {
    struct __log_unimpl_read _log_unimpl_read;
    struct _limitations limitations;
};
struct _write_unimpl {
    struct __log_unimpl_write _log_unimpl_write;
    struct _object object;
};
struct _silent_unimpl {
    struct __qname _qname;
    struct __reg_or_field _reg_or_field;
    struct __simple_write _simple_write;
    struct _limitations limitations;
    struct _read_field read_field;
    struct _write_field write_field;
};
struct _undocumented {
    struct __qname _qname;
    struct __reg_or_field _reg_or_field;
    struct __simple_write _simple_write;
    struct _read_field read_field;
    struct _write_field write_field;
};
struct _unmapped {
    struct __register _register;
};
struct _sticky {
    struct __soft_reset _soft_reset;
};
struct _design_limitation {
    struct _limitations limitations;
};
struct _function_mapped_bank {
    struct _bank bank;
    int *function;
};
struct _function_io_memory {
};
struct _miss_pattern_bank {
    struct _bank bank;
    uint8 *miss_pattern;
};
struct _bank_obj {
    struct _bank bank;
};
struct _map_target {
    struct __connect _connect;
    uint32 map_target;
    exception_type_t (*issue)(x_device_t *arg0, map_target arg1, transaction_t *arg2, uint64 arg3);
};
struct _signal_port {
};
struct _signal_connect {
    struct __connect _connect;
    struct _post_init post_init;
};
struct _group {
    struct _object object;
};
struct _attribute {
    struct __conf_attribute _conf_attribute;
    attr_value_t (*get)(x_device_t *arg0, attribute arg1);
    bool (*set)(x_device_t *arg0, attribute arg1, attr_value_t arg2);
};
struct _bool_attr {
    struct _attribute attribute;
    struct _init init;
    bool *init_val;
    uint32 val;
};
struct _uint64_attr {
    struct _attribute attribute;
    struct _init init;
    uint64 *init_val;
    uint32 val;
};
struct _int64_attr {
    struct _attribute attribute;
    struct _init init;
    int64 *init_val;
    uint32 val;
};
struct _double_attr {
    struct _attribute attribute;
    struct _init init;
    double *init_val;
    uint32 val;
};
struct _pseudo_attr {
    struct _attribute attribute;
};
struct _read_only_attr {
    struct _pseudo_attr pseudo_attr;
};
struct _write_only_attr {
    struct _pseudo_attr pseudo_attr;
};
struct _init_as_subobj {
    struct __connect _connect;
    struct _init init;
    char const **classname;
};
struct _subdevice {
    struct _object object;
    uint32 _cached_port_obj;
};
struct ___read {
    struct __get _get;
    struct _read_field read_field;
    uint64 (*read)(x_device_t *arg0, __read arg1);
};
struct ___write {
    struct __get _get;
    struct __set _set;
    struct _write_field write_field;
    void  (*write)(x_device_t *arg0, __write arg1, uint64 arg2);
};
struct _event {
    struct _object object;
    struct _shown_desc shown_desc;
    event_class_t *const **_pevclass;
    void  (*_callback)(x_device_t *arg0, event arg1, void  *arg2);
    char *(*_describe_event)(x_device_t *arg0, event arg1, void  *arg2);
    attr_value_t (*_get_event_info)(x_device_t *arg0, event arg1, void  *arg2);
    void  *(*_set_event_info)(x_device_t *arg0, event arg1, attr_value_t arg2);
    void  (*_destroy)(x_device_t *arg0, event arg1, void  *arg2);
};
struct __event {
    struct _event event;
};
struct __time_event {
    struct __event _event;
};
struct __cycle_event {
    struct __event _event;
};
struct __simple_event {
    struct __event _event;
    void  (*event)(x_device_t *arg0, _simple_event arg1);
};
struct _simple_time_event {
    struct __simple_event _simple_event;
    struct __time_event _time_event;
};
struct _simple_cycle_event {
    struct __cycle_event _cycle_event;
    struct __simple_event _simple_event;
};
struct __custom_event {
    struct __event _event;
    void  (*event)(x_device_t *arg0, _custom_event arg1, void  *arg2);
    attr_value_t (*get_event_info)(x_device_t *arg0, _custom_event arg1, void  *arg2);
    void  *(*set_event_info)(x_device_t *arg0, _custom_event arg1, attr_value_t arg2);
    void  (*destroy)(x_device_t *arg0, _custom_event arg1, void  *arg2);
};
struct _custom_time_event {
    struct __custom_event _custom_event;
    struct __time_event _time_event;
};
struct _custom_cycle_event {
    struct __custom_event _custom_event;
    struct __cycle_event _cycle_event;
};
struct __uint64_event {
    struct __event _event;
    void  (*event)(x_device_t *arg0, _uint64_event arg1, uint64 arg2);
};
struct _uint64_time_event {
    struct __time_event _time_event;
    struct __uint64_event _uint64_event;
};
struct _uint64_cycle_event {
    struct __cycle_event _cycle_event;
    struct __uint64_event _uint64_event;
};



struct __devstruct_1x_device_0buffer_0r000 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r001 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r002 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r003 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r004 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r005 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r006 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r007 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r008 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r009 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r010 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r011 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r012 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r013 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r014 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r015 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r016 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r017 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r018 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r019 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r020 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r021 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r022 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r023 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r024 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r025 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r026 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r027 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r028 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r029 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r030 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r031 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r032 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r033 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r034 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r035 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r036 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r037 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r038 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r039 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r040 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r041 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r042 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r043 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r044 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r045 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r046 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r047 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r048 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r049 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r050 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r051 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r052 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r053 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r054 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r055 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r056 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r057 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r058 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r059 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r060 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r061 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r062 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r063 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r064 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r065 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r066 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r067 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r068 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r069 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r070 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r071 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r072 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r073 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r074 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r075 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r076 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r077 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r078 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r079 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r080 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r081 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r082 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r083 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r084 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r085 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r086 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r087 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r088 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r089 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r090 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r091 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r092 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r093 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r094 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r095 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r096 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r097 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r098 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r099 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r100 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r101 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r102 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r103 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r104 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r105 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r106 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r107 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r108 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r109 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r110 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r111 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r112 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r113 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r114 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r115 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r116 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r117 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r118 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r119 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r120 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r121 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r122 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r123 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r124 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r125 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r126 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r127 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r128 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r129 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r130 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r131 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r132 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r133 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r134 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r135 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r136 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r137 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r138 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r139 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r140 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r141 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r142 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r143 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r144 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r145 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r146 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r147 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r148 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r149 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r150 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r151 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r152 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r153 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r154 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r155 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r156 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r157 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r158 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r159 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r160 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r161 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r162 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r163 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r164 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r165 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r166 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r167 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r168 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r169 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r170 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r171 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r172 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r173 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r174 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r175 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r176 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r177 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r178 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r179 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r180 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r181 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r182 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r183 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r184 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r185 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r186 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r187 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r188 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r189 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r190 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r191 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r192 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r193 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r194 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r195 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r196 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r197 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r198 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r199 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r200 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r201 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r202 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r203 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r204 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r205 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r206 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r207 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r208 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r209 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r210 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r211 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r212 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r213 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r214 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r215 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r216 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r217 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r218 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r219 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r220 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r221 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r222 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r223 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r224 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r225 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r226 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r227 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r228 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r229 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r230 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r231 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r232 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r233 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r234 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r235 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r236 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r237 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r238 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r239 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r240 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r241 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r242 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r243 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r244 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r245 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r246 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r247 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r248 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r249 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r250 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r251 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r252 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r253 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r254 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer_0r255 {
    uint64 val;
};
struct __devstruct_1x_device_0buffer {
    conf_object_t *_obj;
    _callback_vect_t _after_read_callbacks;
    _callback_vect_t _after_write_callbacks;
    _callback_vect_t _before_read_callbacks;
    _callback_vect_t _before_write_callbacks;
    conf_object_t *_cached_bank_obj;
    _connection_vect_t _connections;
    struct __devstruct_1x_device_0buffer_0r000 r000;
    struct __devstruct_1x_device_0buffer_0r001 r001;
    struct __devstruct_1x_device_0buffer_0r002 r002;
    struct __devstruct_1x_device_0buffer_0r003 r003;
    struct __devstruct_1x_device_0buffer_0r004 r004;
    struct __devstruct_1x_device_0buffer_0r005 r005;
    struct __devstruct_1x_device_0buffer_0r006 r006;
    struct __devstruct_1x_device_0buffer_0r007 r007;
    struct __devstruct_1x_device_0buffer_0r008 r008;
    struct __devstruct_1x_device_0buffer_0r009 r009;
    struct __devstruct_1x_device_0buffer_0r010 r010;
    struct __devstruct_1x_device_0buffer_0r011 r011;
    struct __devstruct_1x_device_0buffer_0r012 r012;
    struct __devstruct_1x_device_0buffer_0r013 r013;
    struct __devstruct_1x_device_0buffer_0r014 r014;
    struct __devstruct_1x_device_0buffer_0r015 r015;
    struct __devstruct_1x_device_0buffer_0r016 r016;
    struct __devstruct_1x_device_0buffer_0r017 r017;
    struct __devstruct_1x_device_0buffer_0r018 r018;
    struct __devstruct_1x_device_0buffer_0r019 r019;
    struct __devstruct_1x_device_0buffer_0r020 r020;
    struct __devstruct_1x_device_0buffer_0r021 r021;
    struct __devstruct_1x_device_0buffer_0r022 r022;
    struct __devstruct_1x_device_0buffer_0r023 r023;
    struct __devstruct_1x_device_0buffer_0r024 r024;
    struct __devstruct_1x_device_0buffer_0r025 r025;
    struct __devstruct_1x_device_0buffer_0r026 r026;
    struct __devstruct_1x_device_0buffer_0r027 r027;
    struct __devstruct_1x_device_0buffer_0r028 r028;
    struct __devstruct_1x_device_0buffer_0r029 r029;
    struct __devstruct_1x_device_0buffer_0r030 r030;
    struct __devstruct_1x_device_0buffer_0r031 r031;
    struct __devstruct_1x_device_0buffer_0r032 r032;
    struct __devstruct_1x_device_0buffer_0r033 r033;
    struct __devstruct_1x_device_0buffer_0r034 r034;
    struct __devstruct_1x_device_0buffer_0r035 r035;
    struct __devstruct_1x_device_0buffer_0r036 r036;
    struct __devstruct_1x_device_0buffer_0r037 r037;
    struct __devstruct_1x_device_0buffer_0r038 r038;
    struct __devstruct_1x_device_0buffer_0r039 r039;
    struct __devstruct_1x_device_0buffer_0r040 r040;
    struct __devstruct_1x_device_0buffer_0r041 r041;
    struct __devstruct_1x_device_0buffer_0r042 r042;
    struct __devstruct_1x_device_0buffer_0r043 r043;
    struct __devstruct_1x_device_0buffer_0r044 r044;
    struct __devstruct_1x_device_0buffer_0r045 r045;
    struct __devstruct_1x_device_0buffer_0r046 r046;
    struct __devstruct_1x_device_0buffer_0r047 r047;
    struct __devstruct_1x_device_0buffer_0r048 r048;
    struct __devstruct_1x_device_0buffer_0r049 r049;
    struct __devstruct_1x_device_0buffer_0r050 r050;
    struct __devstruct_1x_device_0buffer_0r051 r051;
    struct __devstruct_1x_device_0buffer_0r052 r052;
    struct __devstruct_1x_device_0buffer_0r053 r053;
    struct __devstruct_1x_device_0buffer_0r054 r054;
    struct __devstruct_1x_device_0buffer_0r055 r055;
    struct __devstruct_1x_device_0buffer_0r056 r056;
    struct __devstruct_1x_device_0buffer_0r057 r057;
    struct __devstruct_1x_device_0buffer_0r058 r058;
    struct __devstruct_1x_device_0buffer_0r059 r059;
    struct __devstruct_1x_device_0buffer_0r060 r060;
    struct __devstruct_1x_device_0buffer_0r061 r061;
    struct __devstruct_1x_device_0buffer_0r062 r062;
    struct __devstruct_1x_device_0buffer_0r063 r063;
    struct __devstruct_1x_device_0buffer_0r064 r064;
    struct __devstruct_1x_device_0buffer_0r065 r065;
    struct __devstruct_1x_device_0buffer_0r066 r066;
    struct __devstruct_1x_device_0buffer_0r067 r067;
    struct __devstruct_1x_device_0buffer_0r068 r068;
    struct __devstruct_1x_device_0buffer_0r069 r069;
    struct __devstruct_1x_device_0buffer_0r070 r070;
    struct __devstruct_1x_device_0buffer_0r071 r071;
    struct __devstruct_1x_device_0buffer_0r072 r072;
    struct __devstruct_1x_device_0buffer_0r073 r073;
    struct __devstruct_1x_device_0buffer_0r074 r074;
    struct __devstruct_1x_device_0buffer_0r075 r075;
    struct __devstruct_1x_device_0buffer_0r076 r076;
    struct __devstruct_1x_device_0buffer_0r077 r077;
    struct __devstruct_1x_device_0buffer_0r078 r078;
    struct __devstruct_1x_device_0buffer_0r079 r079;
    struct __devstruct_1x_device_0buffer_0r080 r080;
    struct __devstruct_1x_device_0buffer_0r081 r081;
    struct __devstruct_1x_device_0buffer_0r082 r082;
    struct __devstruct_1x_device_0buffer_0r083 r083;
    struct __devstruct_1x_device_0buffer_0r084 r084;
    struct __devstruct_1x_device_0buffer_0r085 r085;
    struct __devstruct_1x_device_0buffer_0r086 r086;
    struct __devstruct_1x_device_0buffer_0r087 r087;
    struct __devstruct_1x_device_0buffer_0r088 r088;
    struct __devstruct_1x_device_0buffer_0r089 r089;
    struct __devstruct_1x_device_0buffer_0r090 r090;
    struct __devstruct_1x_device_0buffer_0r091 r091;
    struct __devstruct_1x_device_0buffer_0r092 r092;
    struct __devstruct_1x_device_0buffer_0r093 r093;
    struct __devstruct_1x_device_0buffer_0r094 r094;
    struct __devstruct_1x_device_0buffer_0r095 r095;
    struct __devstruct_1x_device_0buffer_0r096 r096;
    struct __devstruct_1x_device_0buffer_0r097 r097;
    struct __devstruct_1x_device_0buffer_0r098 r098;
    struct __devstruct_1x_device_0buffer_0r099 r099;
    struct __devstruct_1x_device_0buffer_0r100 r100;
    struct __devstruct_1x_device_0buffer_0r101 r101;
    struct __devstruct_1x_device_0buffer_0r102 r102;
    struct __devstruct_1x_device_0buffer_0r103 r103;
    struct __devstruct_1x_device_0buffer_0r104 r104;
    struct __devstruct_1x_device_0buffer_0r105 r105;
    struct __devstruct_1x_device_0buffer_0r106 r106;
    struct __devstruct_1x_device_0buffer_0r107 r107;
    struct __devstruct_1x_device_0buffer_0r108 r108;
    struct __devstruct_1x_device_0buffer_0r109 r109;
    struct __devstruct_1x_device_0buffer_0r110 r110;
    struct __devstruct_1x_device_0buffer_0r111 r111;
    struct __devstruct_1x_device_0buffer_0r112 r112;
    struct __devstruct_1x_device_0buffer_0r113 r113;
    struct __devstruct_1x_device_0buffer_0r114 r114;
    struct __devstruct_1x_device_0buffer_0r115 r115;
    struct __devstruct_1x_device_0buffer_0r116 r116;
    struct __devstruct_1x_device_0buffer_0r117 r117;
    struct __devstruct_1x_device_0buffer_0r118 r118;
    struct __devstruct_1x_device_0buffer_0r119 r119;
    struct __devstruct_1x_device_0buffer_0r120 r120;
    struct __devstruct_1x_device_0buffer_0r121 r121;
    struct __devstruct_1x_device_0buffer_0r122 r122;
    struct __devstruct_1x_device_0buffer_0r123 r123;
    struct __devstruct_1x_device_0buffer_0r124 r124;
    struct __devstruct_1x_device_0buffer_0r125 r125;
    struct __devstruct_1x_device_0buffer_0r126 r126;
    struct __devstruct_1x_device_0buffer_0r127 r127;
    struct __devstruct_1x_device_0buffer_0r128 r128;
    struct __devstruct_1x_device_0buffer_0r129 r129;
    struct __devstruct_1x_device_0buffer_0r130 r130;
    struct __devstruct_1x_device_0buffer_0r131 r131;
    struct __devstruct_1x_device_0buffer_0r132 r132;
    struct __devstruct_1x_device_0buffer_0r133 r133;
    struct __devstruct_1x_device_0buffer_0r134 r134;
    struct __devstruct_1x_device_0buffer_0r135 r135;
    struct __devstruct_1x_device_0buffer_0r136 r136;
    struct __devstruct_1x_device_0buffer_0r137 r137;
    struct __devstruct_1x_device_0buffer_0r138 r138;
    struct __devstruct_1x_device_0buffer_0r139 r139;
    struct __devstruct_1x_device_0buffer_0r140 r140;
    struct __devstruct_1x_device_0buffer_0r141 r141;
    struct __devstruct_1x_device_0buffer_0r142 r142;
    struct __devstruct_1x_device_0buffer_0r143 r143;
    struct __devstruct_1x_device_0buffer_0r144 r144;
    struct __devstruct_1x_device_0buffer_0r145 r145;
    struct __devstruct_1x_device_0buffer_0r146 r146;
    struct __devstruct_1x_device_0buffer_0r147 r147;
    struct __devstruct_1x_device_0buffer_0r148 r148;
    struct __devstruct_1x_device_0buffer_0r149 r149;
    struct __devstruct_1x_device_0buffer_0r150 r150;
    struct __devstruct_1x_device_0buffer_0r151 r151;
    struct __devstruct_1x_device_0buffer_0r152 r152;
    struct __devstruct_1x_device_0buffer_0r153 r153;
    struct __devstruct_1x_device_0buffer_0r154 r154;
    struct __devstruct_1x_device_0buffer_0r155 r155;
    struct __devstruct_1x_device_0buffer_0r156 r156;
    struct __devstruct_1x_device_0buffer_0r157 r157;
    struct __devstruct_1x_device_0buffer_0r158 r158;
    struct __devstruct_1x_device_0buffer_0r159 r159;
    struct __devstruct_1x_device_0buffer_0r160 r160;
    struct __devstruct_1x_device_0buffer_0r161 r161;
    struct __devstruct_1x_device_0buffer_0r162 r162;
    struct __devstruct_1x_device_0buffer_0r163 r163;
    struct __devstruct_1x_device_0buffer_0r164 r164;
    struct __devstruct_1x_device_0buffer_0r165 r165;
    struct __devstruct_1x_device_0buffer_0r166 r166;
    struct __devstruct_1x_device_0buffer_0r167 r167;
    struct __devstruct_1x_device_0buffer_0r168 r168;
    struct __devstruct_1x_device_0buffer_0r169 r169;
    struct __devstruct_1x_device_0buffer_0r170 r170;
    struct __devstruct_1x_device_0buffer_0r171 r171;
    struct __devstruct_1x_device_0buffer_0r172 r172;
    struct __devstruct_1x_device_0buffer_0r173 r173;
    struct __devstruct_1x_device_0buffer_0r174 r174;
    struct __devstruct_1x_device_0buffer_0r175 r175;
    struct __devstruct_1x_device_0buffer_0r176 r176;
    struct __devstruct_1x_device_0buffer_0r177 r177;
    struct __devstruct_1x_device_0buffer_0r178 r178;
    struct __devstruct_1x_device_0buffer_0r179 r179;
    struct __devstruct_1x_device_0buffer_0r180 r180;
    struct __devstruct_1x_device_0buffer_0r181 r181;
    struct __devstruct_1x_device_0buffer_0r182 r182;
    struct __devstruct_1x_device_0buffer_0r183 r183;
    struct __devstruct_1x_device_0buffer_0r184 r184;
    struct __devstruct_1x_device_0buffer_0r185 r185;
    struct __devstruct_1x_device_0buffer_0r186 r186;
    struct __devstruct_1x_device_0buffer_0r187 r187;
    struct __devstruct_1x_device_0buffer_0r188 r188;
    struct __devstruct_1x_device_0buffer_0r189 r189;
    struct __devstruct_1x_device_0buffer_0r190 r190;
    struct __devstruct_1x_device_0buffer_0r191 r191;
    struct __devstruct_1x_device_0buffer_0r192 r192;
    struct __devstruct_1x_device_0buffer_0r193 r193;
    struct __devstruct_1x_device_0buffer_0r194 r194;
    struct __devstruct_1x_device_0buffer_0r195 r195;
    struct __devstruct_1x_device_0buffer_0r196 r196;
    struct __devstruct_1x_device_0buffer_0r197 r197;
    struct __devstruct_1x_device_0buffer_0r198 r198;
    struct __devstruct_1x_device_0buffer_0r199 r199;
    struct __devstruct_1x_device_0buffer_0r200 r200;
    struct __devstruct_1x_device_0buffer_0r201 r201;
    struct __devstruct_1x_device_0buffer_0r202 r202;
    struct __devstruct_1x_device_0buffer_0r203 r203;
    struct __devstruct_1x_device_0buffer_0r204 r204;
    struct __devstruct_1x_device_0buffer_0r205 r205;
    struct __devstruct_1x_device_0buffer_0r206 r206;
    struct __devstruct_1x_device_0buffer_0r207 r207;
    struct __devstruct_1x_device_0buffer_0r208 r208;
    struct __devstruct_1x_device_0buffer_0r209 r209;
    struct __devstruct_1x_device_0buffer_0r210 r210;
    struct __devstruct_1x_device_0buffer_0r211 r211;
    struct __devstruct_1x_device_0buffer_0r212 r212;
    struct __devstruct_1x_device_0buffer_0r213 r213;
    struct __devstruct_1x_device_0buffer_0r214 r214;
    struct __devstruct_1x_device_0buffer_0r215 r215;
    struct __devstruct_1x_device_0buffer_0r216 r216;
    struct __devstruct_1x_device_0buffer_0r217 r217;
    struct __devstruct_1x_device_0buffer_0r218 r218;
    struct __devstruct_1x_device_0buffer_0r219 r219;
    struct __devstruct_1x_device_0buffer_0r220 r220;
    struct __devstruct_1x_device_0buffer_0r221 r221;
    struct __devstruct_1x_device_0buffer_0r222 r222;
    struct __devstruct_1x_device_0buffer_0r223 r223;
    struct __devstruct_1x_device_0buffer_0r224 r224;
    struct __devstruct_1x_device_0buffer_0r225 r225;
    struct __devstruct_1x_device_0buffer_0r226 r226;
    struct __devstruct_1x_device_0buffer_0r227 r227;
    struct __devstruct_1x_device_0buffer_0r228 r228;
    struct __devstruct_1x_device_0buffer_0r229 r229;
    struct __devstruct_1x_device_0buffer_0r230 r230;
    struct __devstruct_1x_device_0buffer_0r231 r231;
    struct __devstruct_1x_device_0buffer_0r232 r232;
    struct __devstruct_1x_device_0buffer_0r233 r233;
    struct __devstruct_1x_device_0buffer_0r234 r234;
    struct __devstruct_1x_device_0buffer_0r235 r235;
    struct __devstruct_1x_device_0buffer_0r236 r236;
    struct __devstruct_1x_device_0buffer_0r237 r237;
    struct __devstruct_1x_device_0buffer_0r238 r238;
    struct __devstruct_1x_device_0buffer_0r239 r239;
    struct __devstruct_1x_device_0buffer_0r240 r240;
    struct __devstruct_1x_device_0buffer_0r241 r241;
    struct __devstruct_1x_device_0buffer_0r242 r242;
    struct __devstruct_1x_device_0buffer_0r243 r243;
    struct __devstruct_1x_device_0buffer_0r244 r244;
    struct __devstruct_1x_device_0buffer_0r245 r245;
    struct __devstruct_1x_device_0buffer_0r246 r246;
    struct __devstruct_1x_device_0buffer_0r247 r247;
    struct __devstruct_1x_device_0buffer_0r248 r248;
    struct __devstruct_1x_device_0buffer_0r249 r249;
    struct __devstruct_1x_device_0buffer_0r250 r250;
    struct __devstruct_1x_device_0buffer_0r251 r251;
    struct __devstruct_1x_device_0buffer_0r252 r252;
    struct __devstruct_1x_device_0buffer_0r253 r253;
    struct __devstruct_1x_device_0buffer_0r254 r254;
    struct __devstruct_1x_device_0buffer_0r255 r255;
};
struct __devstruct_1x_device_2target_mem_space_1memory_space {
    void const  *val;
};
struct __devstruct_1x_device_2target_mem_space {
    conf_object_t *obj;
    char const *port;
    struct __devstruct_1x_device_2target_mem_space_1memory_space memory_space;
};
struct x_device {
    conf_object_t obj;
    _dml_immediate_after_state_t *_immediate_after_state;
    _dml_detached_hook_queue_t *_detached_hook_queue_stack;
    bool _has_state_callbacks;
    bool _issuing_state_callbacks;
    dml_qname_cache_t _qname_cache;
    ht_int_table_t _subsequent_log_ht;
    struct __devstruct_1x_device_0buffer buffer;
    struct __devstruct_1x_device_2target_mem_space target_mem_space;
};
// allows generated code to store device struct offsets in uint32,
// which saves space
STATIC_ASSERT(sizeof(struct x_device) <= UINT32_MAX);
static const uint64 _dml_loggroup_Register_Read UNUSED = 1ULL;
static const uint64 _dml_loggroup_Register_Write UNUSED = 2ULL;

void hard_reset_x_device(x_device_t *_obj);
void soft_reset_x_device(x_device_t *_obj);

#endif /* not X_DEVICE_DML_H */
